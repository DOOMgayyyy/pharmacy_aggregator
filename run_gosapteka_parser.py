import asyncio
import os
import shutil
import sys

# –ò–ó–ú–ï–ù–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ —Ñ–∞–π–ª–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
from parsers.gosapteka.url_collector import collect_urls_to_files
from parsers.gosapteka.details_processor import process_details_from_files
from config import URLS_DIR

async def main():
    """
    –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–ª–∏ —Ä–∞–∑–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã: 'stage1', 'stage2', 'full'.
    """
    stage = sys.argv[1] if len(sys.argv) > 1 else 'full'

    if stage in ['stage1', 'full']:
        print("="*50)
        print("‚ñ∂Ô∏è STAGE 1: COLLECTING URLS AND SAVING TO FILES")
        print("="*50)

        if os.path.exists(URLS_DIR):
            shutil.rmtree(URLS_DIR)
            print(f"üßπ Directory '{URLS_DIR}' cleaned.")
        os.makedirs(URLS_DIR)

        await collect_urls_to_files()

        print("\n" + "="*50)
        print("‚úÖ STAGE 1 COMPLETE.")

    if stage in ['stage2', 'full']:
        print("\n‚ñ∂Ô∏è STAGE 2: PROCESSING DETAILS FROM FILES AND SAVING TO DB")
        print("="*50)

        try:
            await process_details_from_files()
        except Exception as e:
            print(f"‚ùå A critical error occurred during Stage 2: {e}")

        print("\n" + "="*50)
        print("‚úÖ STAGE 2 COMPLETE.")

    if stage not in ['stage1', 'stage2', 'full']:
        print(f"‚ùå Invalid argument '{stage}'. Use 'stage1', 'stage2', or 'full'.")
        return

    print("\nüéâ ALL STAGES COMPLETE. WORK FINISHED.")

if __name__ == "__main__":
    asyncio.run(main())